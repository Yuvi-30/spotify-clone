 return (
    
    <div className="max-w-2xl mx-auto p-4 bg-gray-100 min-h-screen">
      <div className="mt-auto pt-4 border-t border-gray-800">
  <div className="p-2">
    {userProfile && (
      <div className="flex items-center space-x-2 mb-4">
        {userProfile.images?.[0]?.url && (
          <img 
            src={userProfile.images[0].url} 
            alt={userProfile.display_name} 
            className="w-8 h-8 rounded-full"
          />
        )}
        <div>
          <div className="text-sm font-medium">{userProfile.display_name}</div>
          <div className="text-xs text-gray-400">{userProfile.email}</div>
        </div>
      </div>
    )}
    {token ? logoutButton : loginButton}
  </div>
</div>
          <div className="bg-[#1DB954] text-white rounded-lg p-6 mb-6 text-center 
                    max-w-md mx-auto shadow-lg
                    transform hover:scale-[1.02] transition-transform duration-300
                    animate-fade-in">
      <h2 className="text-2xl font-bold mb-2 flex items-center justify-center">
        <Music className="mr-2" /> 
        <span className="bg-black bg-opacity-20 px-3 py-1 rounded-full">
          New Release Coming
        </span>
      </h2>
      
      <div className="mb-4 flex flex-col items-center">
        <div className="flex items-center">
          <img 
            src="https://i.scdn.co/image/ab6761610000e5eb12a2ef08d00dd7451a6dbed6" 
            alt="Ed Sheeran" 
            className="w-16 h-16 rounded-full mr-3 border-2 border-white shadow-md
                      animate-float"
          />
          <div className="text-left">
            <p className="font-bold text-lg">Ed Sheeran</p>
            <p className="text-sm opacity-80">Autumn Variations</p>
          </div>
        </div>
      </div>

      <p className="text-lg mb-3">Drops in <span className="font-bold">{timeLeft.days} days</span></p>
      
      <div className="flex justify-center space-x-2 font-mono">
        <div className="bg-black bg-opacity-20 rounded-lg p-2 min-w-[60px]
                      transform hover:-translate-y-1 transition-transform">
          <div className="text-2xl font-bold">
            {String(timeLeft.hours).padStart(2, '0')}
          </div>
          <div className="text-xs opacity-80">HOURS</div>
        </div>
        <div className="text-2xl flex items-center pb-4">:</div>
        <div className="bg-black bg-opacity-20 rounded-lg p-2 min-w-[60px]
                      transform hover:-translate-y-1 transition-transform">
          <div className="text-2xl font-bold">
            {String(timeLeft.minutes).padStart(2, '0')}
          </div>
          <div className="text-xs opacity-80">MINUTES</div>
        </div>
        <div className="text-2xl flex items-center pb-4">:</div>
        <div className="bg-black bg-opacity-20 rounded-lg p-2 min-w-[60px]
                      transform hover:-translate-y-1 transition-transform">
          <div className="text-2xl font-bold">
            {String(timeLeft.seconds).padStart(2, '0')}
          </div>
          <div className="text-xs opacity-80">SECONDS</div>
        </div>
      </div>

      <div className="mt-4 pt-3 border-t border-white border-opacity-20">
        <button className="bg-white text-[#1DB954] px-4 py-1 rounded-full text-sm font-bold
                         transform hover:scale-105 transition-transform
                         flex items-center mx-auto">
          <Play className="mr-1" size={14} /> Remind Me
        </button>
      </div>
    </div>
            

        {/* User profile section */}
        {userProfile && (
          <div className="flex items-center mb-6 p-4 bg-gray-50 rounded-lg">
            {userProfile.images && userProfile.images[0] && (
              <img 
                src={userProfile.images[0].url} 
                alt={userProfile.display_name} 
                className="w-16 h-16 rounded-full mr-4"
              />
            )}
            <div>
              <h2 className="text-xl font-semibold">{userProfile.display_name}</h2>
              <p className="text-gray-600">{userProfile.email}</p>
            </div>
          </div>
        )}

        {/* Tabs for search vs top tracks */}
        {token && (
          <div className="flex border-b mb-4">
            <button 
              className={`py-2 px-4 ${activeTab === 'search' ? 'border-b-2 border-green-500 font-medium' : 'text-gray-500'}`}
              onClick={() => setActiveTab('search')}
            >
              Artist Search
            </button>
            <button 
              className={`py-2 px-4 ${activeTab === 'top' ? 'border-b-2 border-green-500 font-medium' : 'text-gray-500'}`}
              onClick={() => setActiveTab('top')}
            >
              Your Top Tracks
            </button>
          </div>
        )}

        {/* Search tab content */}
        {activeTab === 'search' && (
          <>
            {/* Search Input */}
            <div className="flex mb-4">
              <input 
                type="text" 
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="Search for an artist"
                className="flex-grow p-2 border rounded-l-md"
                disabled={!token}
              />
              <button 
                onClick={searchArtist}
                className={`p-2 rounded-r-md flex items-center ${token ? 'bg-green-500 text-white hover:bg-green-600' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}
                disabled={!token}
              >
                <Search />
              </button>
            </div>

            {/* Artist Information */}
            {artist && (
              <div className="mb-4">
                <div className="flex items-center">
                  {artist.images[0] && (
                    <img 
                      src={artist.images[0].url} 
                      alt={artist.name} 
                      className="w-24 h-24 rounded-full mr-4"
                    />
                  )}
                  <div>
                    <h2 className="text-xl font-semibold">{artist.name}</h2>
                    <p className="text-gray-600">Followers: {artist.followers.total.toLocaleString()}</p>
                    <p className="text-gray-600">Genres: {artist.genres.join(', ')}</p>
                  </div>
                </div>
              </div>
            )}

            {/* Artist Top Tracks */}
            {topTracks.length > 0 && (
              <div>
                <h3 className="text-lg font-semibold mb-2">Top Tracks</h3>
                <div className="grid gap-2">
                  {topTracks.map((track, index) => (
                    <div 
                      key={track.id} 
                      className="flex items-center bg-gray-50 p-2 rounded hover:bg-gray-100"
                    >
                      <span className="mr-2 text-gray-500">{index + 1}.</span>
                      <img 
                        src={track.album.images[2]?.url} 
                        alt={track.name} 
                        className="w-12 h-12 mr-2"
                      />
                      <div className="flex-grow">
                        <p className="font-medium">{track.name}</p>
                        <p className="text-sm text-gray-600">{track.album.name}</p>
                      </div>
                      {track.preview_url && (
                        <button 
                          onClick={() => handleTrackPlayback(track)}
                          className="text-green-500 hover:text-green-600 p-2"
                        >
                          {currentTrack && currentTrack.src === track.preview_url && isPlaying ? (
                            <Pause />
                          ) : (
                            <Play />
                          )}
                        </button>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </>
        )}

        {/* User Top Tracks tab content */}
        {activeTab === 'top' && userTopTracks.length > 0 && (
          <div>
            <h3 className="text-lg font-semibold mb-2">Your Top Tracks</h3>
            <div className="grid gap-2">
              {userTopTracks.map((track, index) => (
                <div 
                  key={track.id} 
                  className="flex items-center bg-gray-50 p-2 rounded hover:bg-gray-100"
                >
                  <span className="mr-2 text-gray-500">{index + 1}.</span>
                  <img 
                    src={track.album.images[2]?.url} 
                    alt={track.name} 
                    className="w-12 h-12 mr-2"
                  />
                  <div className="flex-grow">
                    <p className="font-medium">{track.name}</p>
                    <p className="text-sm text-gray-600">
                      {track.artists.map(a => a.name).join(', ')}
                    </p>
                  </div>
                  {track.preview_url && (
                    <button 
                      onClick={() => handleTrackPlayback(track)}
                      className="text-green-500 hover:text-green-600 p-2"
                    >
                      {currentTrack && currentTrack.src === track.preview_url && isPlaying ? (
                        <Pause />
                      ) : (
                        <Play />
                      )}
                    </button>
                  )}
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Empty state for top tracks */}
        {activeTab === 'top' && userTopTracks.length === 0 && token && (
          <div className="text-center py-8 text-gray-500">
            <p>No top tracks found. Listen to more music on Spotify!</p>
          </div>
        )}

        {/* Login prompt when not authenticated */}
        {!token && (
          <div className="text-center py-8">
            <div className="mb-4">
              <User size={48} className="mx-auto text-gray-400" />
            </div>
            <p className="mb-4">Please login with Spotify to access all features</p>
            {loginButton}
          </div>
        )}
      </div>
   
  );
};




